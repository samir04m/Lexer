
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = '14EE9CE672BA48BA9489C765B13593E5'
    
_lr_action_items = {'ASIGNACION':([4,],[13,]),'MAYOR_QUE':([2,4,5,10,11,12,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,52,54,56,57,64,65,66,73,74,75,76,77,78,79,80,81,82,83,84,85,],[-31,-33,14,-33,14,14,14,-9,14,-11,-12,14,-14,14,14,-15,-13,-3,-4,14,14,-16,-7,-5,-6,-27,-8,59,-32,14,14,-27,-29,-28,-30,14,14,14,14,14,14,-22,-20,-21,-19,-24,-23,]),'DIFERENTE':([2,4,5,10,11,12,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,52,54,56,57,64,65,66,73,74,75,76,77,78,79,80,81,82,83,84,85,],[-31,-33,15,-33,15,15,15,-9,15,-11,-12,15,-14,-18,15,-15,-13,-3,-4,-17,15,-16,-7,-5,-6,-27,-8,62,-32,15,15,-27,-29,-28,-30,15,15,15,15,15,15,-22,-20,-21,-19,-24,-23,]),'LLAVE_IZQUIERDA':([0,1,3,6,7,8,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,50,51,53,67,68,69,70,71,72,],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,]),'ENTERO':([0,1,3,6,7,8,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,50,51,53,67,68,69,70,71,72,],[2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,]),'MENOR_IGUAL':([2,4,5,10,11,12,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,52,54,56,57,64,65,66,73,74,75,76,77,78,79,80,81,82,83,84,85,],[-31,-33,17,-33,17,17,17,-9,17,-11,-12,17,-14,17,17,-15,-13,-3,-4,17,17,-16,-7,-5,-6,-27,-8,60,-32,17,17,-27,-29,-28,-30,17,17,17,17,17,17,-22,-20,-21,-19,-24,-23,]),'CORCHETE_IZQUIERDO':([0,1,3,6,7,8,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,50,51,53,67,68,69,70,71,72,],[3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'IGUAL':([2,4,5,10,11,12,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,52,54,56,57,64,65,66,73,74,75,76,77,78,79,80,81,82,83,84,85,],[-31,-33,21,-33,21,21,21,-9,21,-11,-12,21,-14,-18,21,-15,-13,-3,-4,-17,21,-16,-7,-5,-6,-27,-8,63,-32,21,21,-27,-29,-28,-30,21,21,21,21,21,21,-22,-20,-21,-19,-24,-23,]),'Y':([2,4,5,10,11,12,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,52,54,56,57,64,65,66,73,74,75,76,77,78,79,80,81,82,83,84,85,],[-31,-33,22,-33,22,22,51,-9,22,-11,-12,22,-14,-18,22,-15,-13,-3,-4,-17,22,-16,-7,-5,-6,-27,-8,-10,-32,22,22,-27,-29,-28,-30,22,22,22,22,22,22,-22,-20,-21,-19,-24,-23,]),'$end':([2,4,5,9,10,30,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,52,54,55,65,66,73,80,81,82,83,84,85,],[-31,-33,-2,0,-33,-9,-11,-12,-14,-18,-26,-15,-13,-3,-4,-17,-25,-16,-7,-5,-6,-27,-8,-10,-32,-1,-29,-28,-30,-22,-20,-21,-19,-24,-23,]),'MULTIPLICACION':([2,4,5,10,11,12,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,52,54,56,57,64,65,66,73,74,75,76,77,78,79,80,81,82,83,84,85,],[-31,-33,25,-33,25,25,25,-9,25,-11,-12,25,25,25,25,25,25,25,25,25,25,25,-7,-5,-6,-27,-8,-10,-32,25,25,-27,-29,-28,-30,25,25,25,25,25,25,-22,-20,-21,-19,-24,-23,]),'DIVISION':([2,4,5,10,11,12,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,52,54,56,57,64,65,66,73,74,75,76,77,78,79,80,81,82,83,84,85,],[-31,-33,26,-33,26,26,26,-9,26,-11,-12,26,26,26,26,26,26,26,26,26,26,26,-7,-5,-6,-27,-8,-10,-32,26,26,-27,-29,-28,-30,26,26,26,26,26,26,-22,-20,-21,-19,-24,-23,]),'IDENTIFICADOR':([0,1,3,6,7,8,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,50,51,53,67,68,69,70,71,72,],[4,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'NEGAR':([2,4,5,10,11,12,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,52,54,56,57,64,65,66,73,74,75,76,77,78,79,80,81,82,83,84,85,],[-31,-33,27,-33,27,27,53,-9,27,-11,-12,27,27,27,27,27,27,27,27,27,27,27,-7,27,27,-27,27,-10,-32,27,27,-27,-29,-28,-30,27,27,27,27,27,27,-22,-20,-21,-19,-24,-23,]),'MODULO':([2,4,5,10,11,12,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,52,54,56,57,64,65,66,73,74,75,76,77,78,79,80,81,82,83,84,85,],[-31,-33,28,-33,28,28,28,-9,28,-11,-12,28,28,28,28,28,28,28,28,28,28,28,-7,-5,-6,-27,-8,-10,-32,28,28,-27,-29,-28,-30,28,28,28,28,28,28,-22,-20,-21,-19,-24,-23,]),'COMILLA_DOBLE':([0,1,2,3,6,7,8,10,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,30,31,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,65,66,67,68,69,70,71,72,73,80,81,82,83,84,85,],[8,8,-31,8,8,8,8,-33,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,-9,54,-11,-12,-14,-18,-26,-15,-13,-3,-4,-17,-25,-16,-7,-5,-6,-27,-8,8,8,-10,8,-32,-29,-28,8,8,8,8,8,8,-30,-22,-20,-21,-19,-24,-23,]),'CORCHETE_DERECHO':([2,10,12,30,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,52,54,65,66,73,80,81,82,83,84,85,],[-31,-33,33,-9,-11,-12,-14,-18,-26,-15,-13,-3,-4,-17,-25,-16,-7,-5,-6,-27,-8,-10,-32,-29,-28,-30,-22,-20,-21,-19,-24,-23,]),'PARENTESIS_IZQUIERDO':([0,1,3,6,7,8,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,50,51,53,58,59,60,61,62,63,67,68,69,70,71,72,],[6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,67,68,69,70,71,72,6,6,6,6,6,6,]),'MENOR_QUE':([2,4,5,10,11,12,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,52,54,56,57,64,65,66,73,74,75,76,77,78,79,80,81,82,83,84,85,],[-31,-33,18,-33,18,18,18,-9,18,-11,-12,18,-14,18,18,-15,-13,-3,-4,18,18,-16,-7,-5,-6,-27,-8,61,-32,18,18,-27,-29,-28,-30,18,18,18,18,18,18,-22,-20,-21,-19,-24,-23,]),'SUMA':([2,4,5,10,11,12,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,52,54,56,57,64,65,66,73,74,75,76,77,78,79,80,81,82,83,84,85,],[-31,-33,19,-33,19,19,19,-9,19,-11,-12,19,19,19,19,19,19,-3,-4,19,19,19,-7,-5,-6,-27,-8,-10,-32,19,19,-27,-29,-28,-30,19,19,19,19,19,19,-22,-20,-21,-19,-24,-23,]),'RESTA':([0,1,2,3,4,5,6,7,8,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,56,57,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,],[7,7,-31,7,-33,20,7,7,7,-33,20,20,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,20,-9,20,-11,-12,20,20,20,20,20,20,-3,-4,20,20,20,-7,-5,-6,-27,-8,7,7,-10,7,-32,20,20,-27,-29,-28,7,7,7,7,7,7,-30,20,20,20,20,20,20,-22,-20,-21,-19,-24,-23,]),'O':([2,4,5,10,11,12,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,52,54,56,57,64,65,66,73,74,75,76,77,78,79,80,81,82,83,84,85,],[-31,-33,16,-33,16,16,50,-9,16,-11,-12,16,-14,-18,16,-15,-13,-3,-4,-17,16,-16,-7,-5,-6,-27,-8,-10,-32,16,16,-27,-29,-28,-30,16,16,16,16,16,16,-22,-20,-21,-19,-24,-23,]),'POTENCIA':([2,4,5,10,11,12,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,52,54,56,57,64,65,66,73,74,75,76,77,78,79,80,81,82,83,84,85,],[-31,-33,24,-33,24,24,24,-9,24,-11,-12,24,24,24,24,24,24,24,24,24,24,24,-7,24,24,24,24,-10,-32,24,24,24,-29,-28,-30,24,24,24,24,24,24,-22,-20,-21,-19,-24,-23,]),'MAYOR_IGUAL':([2,4,5,10,11,12,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,52,54,56,57,64,65,66,73,74,75,76,77,78,79,80,81,82,83,84,85,],[-31,-33,23,-33,23,23,23,-9,23,-11,-12,23,-14,23,23,-15,-13,-3,-4,23,23,-16,-7,-5,-6,-27,-8,58,-32,23,23,-27,-29,-28,-30,23,23,23,23,23,23,-22,-20,-21,-19,-24,-23,]),'PARENTESIS_DERECHO':([2,10,29,30,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,52,54,56,57,64,65,66,73,74,75,76,77,78,79,80,81,82,83,84,85,],[-31,-33,52,-9,-11,-12,-14,-18,-26,-15,-13,-3,-4,-17,-25,-16,-7,-5,-6,-27,-8,-10,-32,65,66,73,-29,-28,-30,80,81,82,83,84,85,-22,-20,-21,-19,-24,-23,]),'LLAVE_DERECHA':([2,10,11,30,32,33,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,52,54,65,66,73,80,81,82,83,84,85,],[-31,-33,32,-9,-11,-12,-14,-18,-26,-15,-13,-3,-4,-17,-25,-16,-7,-5,-6,-27,-8,-10,-32,-29,-28,-30,-22,-20,-21,-19,-24,-23,]),'PUNTO_COMA':([2,10,30,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,52,54,65,66,73,80,81,82,83,84,85,],[-31,-33,-9,-11,-12,55,-14,-18,-26,-15,-13,-3,-4,-17,-25,-16,-7,-5,-6,-27,-8,-10,-32,-29,-28,-30,-22,-20,-21,-19,-24,-23,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'declaracion':([0,],[9,]),'expresion':([0,1,3,6,7,8,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,50,51,53,67,68,69,70,71,72,],[5,11,12,29,30,31,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,56,57,64,74,75,76,77,78,79,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> declaracion","S'",1,None,None,None),
  ('declaracion -> IDENTIFICADOR ASIGNACION expresion PUNTO_COMA','declaracion',4,'p_declaracionAsignacion','parser.py',25),
  ('declaracion -> expresion','declaracion',1,'p_declaracionExpresion','parser.py',29),
  ('expresion -> expresion SUMA expresion','expresion',3,'p_expresionOperacion','parser.py',34),
  ('expresion -> expresion RESTA expresion','expresion',3,'p_expresionOperacion','parser.py',35),
  ('expresion -> expresion MULTIPLICACION expresion','expresion',3,'p_expresionOperacion','parser.py',36),
  ('expresion -> expresion DIVISION expresion','expresion',3,'p_expresionOperacion','parser.py',37),
  ('expresion -> expresion POTENCIA expresion','expresion',3,'p_expresionOperacion','parser.py',38),
  ('expresion -> expresion MODULO expresion','expresion',3,'p_expresionOperacion','parser.py',39),
  ('expresion -> RESTA expresion','expresion',2,'p_expresionEnteroNegativo','parser.py',60),
  ('expresion -> PARENTESIS_IZQUIERDO expresion PARENTESIS_DERECHO','expresion',3,'p_grupoExpresiones','parser.py',65),
  ('expresion -> LLAVE_IZQUIERDA expresion LLAVE_DERECHA','expresion',3,'p_grupoExpresiones','parser.py',66),
  ('expresion -> CORCHETE_IZQUIERDO expresion CORCHETE_DERECHO','expresion',3,'p_grupoExpresiones','parser.py',67),
  ('expresion -> expresion MENOR_QUE expresion','expresion',3,'p_expresionLogica','parser.py',73),
  ('expresion -> expresion MAYOR_QUE expresion','expresion',3,'p_expresionLogica','parser.py',74),
  ('expresion -> expresion MENOR_IGUAL expresion','expresion',3,'p_expresionLogica','parser.py',75),
  ('expresion -> expresion MAYOR_IGUAL expresion','expresion',3,'p_expresionLogica','parser.py',76),
  ('expresion -> expresion IGUAL expresion','expresion',3,'p_expresionLogica','parser.py',77),
  ('expresion -> expresion DIFERENTE expresion','expresion',3,'p_expresionLogica','parser.py',78),
  ('expresion -> PARENTESIS_IZQUIERDO expresion PARENTESIS_DERECHO MENOR_QUE PARENTESIS_IZQUIERDO expresion PARENTESIS_DERECHO','expresion',7,'p_expresionLogica','parser.py',79),
  ('expresion -> PARENTESIS_IZQUIERDO expresion PARENTESIS_DERECHO MAYOR_QUE PARENTESIS_IZQUIERDO expresion PARENTESIS_DERECHO','expresion',7,'p_expresionLogica','parser.py',80),
  ('expresion -> PARENTESIS_IZQUIERDO expresion PARENTESIS_DERECHO MENOR_IGUAL PARENTESIS_IZQUIERDO expresion PARENTESIS_DERECHO','expresion',7,'p_expresionLogica','parser.py',81),
  ('expresion -> PARENTESIS_IZQUIERDO expresion PARENTESIS_DERECHO MAYOR_IGUAL PARENTESIS_IZQUIERDO expresion PARENTESIS_DERECHO','expresion',7,'p_expresionLogica','parser.py',82),
  ('expresion -> PARENTESIS_IZQUIERDO expresion PARENTESIS_DERECHO IGUAL PARENTESIS_IZQUIERDO expresion PARENTESIS_DERECHO','expresion',7,'p_expresionLogica','parser.py',83),
  ('expresion -> PARENTESIS_IZQUIERDO expresion PARENTESIS_DERECHO DIFERENTE PARENTESIS_IZQUIERDO expresion PARENTESIS_DERECHO','expresion',7,'p_expresionLogica','parser.py',84),
  ('expresion -> expresion Y expresion','expresion',3,'p_expresionBooleana','parser.py',107),
  ('expresion -> expresion O expresion','expresion',3,'p_expresionBooleana','parser.py',108),
  ('expresion -> expresion NEGAR expresion','expresion',3,'p_expresionBooleana','parser.py',109),
  ('expresion -> PARENTESIS_IZQUIERDO expresion Y expresion PARENTESIS_DERECHO','expresion',5,'p_expresionBooleana','parser.py',110),
  ('expresion -> PARENTESIS_IZQUIERDO expresion O expresion PARENTESIS_DERECHO','expresion',5,'p_expresionBooleana','parser.py',111),
  ('expresion -> PARENTESIS_IZQUIERDO expresion NEGAR expresion PARENTESIS_DERECHO','expresion',5,'p_expresionBooleana','parser.py',112),
  ('expresion -> ENTERO','expresion',1,'p_expresionEntero','parser.py',128),
  ('expresion -> COMILLA_DOBLE expresion COMILLA_DOBLE','expresion',3,'p_expresionCadena','parser.py',132),
  ('expresion -> IDENTIFICADOR','expresion',1,'p_expresionIdentificador','parser.py',136),
]
